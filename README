Swifer: Simple wireless connection tool with auto connect features

This is a work in progress - Updates will be posted here.

Currently (29 Dec 2012) swifer has the following abilities:

swifer [ auto | any | add | reconnect | verbose ]

- called with no parameters swifer will present an ncurses menu of available networks.  If you select a secure network swifer will prompt you for a passkey.
- with "auto" no menu will be displayed.  Swifer will search for the best available netowrk and connect automatically to the known network with the best signal strength.
- with "any" (implies auto) swifer will automaticall connect to the strongest signal in either a known network or an open (unsecure) network.
- with "add" swifer will save whichever network is selected (either via the menu or through auto-detection).  This network will then be 'known' for future attempts.
- with "reconnect" swifer will check the network quality and attempt a new connection whenever the signal drops below a threshold.  NOTE: reconnect is not yet implemented for manual modes.  This is low priority as its main usefulness is for auto modes.
- "verbose" is for troubleshooting.  Disables redirection of dhcpcd output to /dev/null.  Verbose is disabled in auto modes.

BUGS: there definitely are.  Let me know when you find them.

FUTURE DIRECTIONS:
- reduce the reliance on external programs as I learn more about the wireless libs
	- `iwconfig` reliance has been removed.
	- `iproute2` reliance has been removed.
- write sytemd service files for 'auto' modes
	- Done.
- <Want your feature request here? contact me>

MANUAL MENU LAYOUT:
	Shows a list of available networks with the netork name and connection strength.  The name on which the cursor currently sits is reversed.
	The first column shows an asterisk for any known networks (would be available for 'auto' modes) or a blank space for unknown networks.  This is displayed in reverse video for the currently connected network if there is one.
	Arrow keys or 'j' and 'k' move the cursor up and down.  'Enter' selects the highlighted network, and 'q' quits.  'r' will rescan and refresh the listing.


NOTES:
1) Swifer must be run as root, or with sudo to detect and connect to networks.
2) On the first use of "add" swifer will attempt to create a new file /etc/swifer.conf.  If this name or location is unfavorable, it can currently be modified only by changing line 36 of the source and recompiling.  Input on naming and placement of this file are welcome.
	
